{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchain-id/=node_modules/@onchain-id/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@onchain-id/=node_modules/@onchain-id/","@openzeppelin/=node_modules/@openzeppelin/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":"ContextUpgradeable"},"evmVersion":"london","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":75264,"exportedSymbols":{"AddressUpgradeable":[75221],"ContextUpgradeable":[75263],"Initializable":[74891]},"nodeType":"SourceUnit","src":"86:1259:119","nodes":[{"id":75223,"nodeType":"PragmaDirective","src":"86:23:119","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":75224,"nodeType":"ImportDirective","src":"110:42:119","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":75264,"sourceUnit":74892,"symbolAliases":[],"unitAlias":""},{"id":75263,"nodeType":"ContractDefinition","src":"651:693:119","nodes":[{"id":75233,"nodeType":"FunctionDefinition","src":"711:59:119","nodes":[],"body":{"id":75232,"nodeType":"Block","src":"763:7:119","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":75230,"kind":"modifierInvocation","modifierName":{"id":75229,"name":"onlyInitializing","nameLocations":["746:16:119"],"nodeType":"IdentifierPath","referencedDeclaration":74836,"src":"746:16:119"},"nodeType":"ModifierInvocation","src":"746:16:119"}],"name":"__Context_init","nameLocation":"720:14:119","parameters":{"id":75228,"nodeType":"ParameterList","parameters":[],"src":"734:2:119"},"returnParameters":{"id":75231,"nodeType":"ParameterList","parameters":[],"src":"763:0:119"},"scope":75263,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":75239,"nodeType":"FunctionDefinition","src":"776:69:119","nodes":[],"body":{"id":75238,"nodeType":"Block","src":"838:7:119","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":75236,"kind":"modifierInvocation","modifierName":{"id":75235,"name":"onlyInitializing","nameLocations":["821:16:119"],"nodeType":"IdentifierPath","referencedDeclaration":74836,"src":"821:16:119"},"nodeType":"ModifierInvocation","src":"821:16:119"}],"name":"__Context_init_unchained","nameLocation":"785:24:119","parameters":{"id":75234,"nodeType":"ParameterList","parameters":[],"src":"809:2:119"},"returnParameters":{"id":75237,"nodeType":"ParameterList","parameters":[],"src":"838:0:119"},"scope":75263,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":75248,"nodeType":"FunctionDefinition","src":"850:96:119","nodes":[],"body":{"id":75247,"nodeType":"Block","src":"912:34:119","nodes":[],"statements":[{"expression":{"expression":{"id":75244,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:119","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":75245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:119","memberName":"sender","nodeType":"MemberAccess","src":"929:10:119","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":75243,"id":75246,"nodeType":"Return","src":"922:17:119"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:119","parameters":{"id":75240,"nodeType":"ParameterList","parameters":[],"src":"869:2:119"},"returnParameters":{"id":75243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75248,"src":"903:7:119","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75241,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:119","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:119"},"scope":75263,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":75257,"nodeType":"FunctionDefinition","src":"952:99:119","nodes":[],"body":{"id":75256,"nodeType":"Block","src":"1019:32:119","nodes":[],"statements":[{"expression":{"expression":{"id":75253,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:119","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":75254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:119","memberName":"data","nodeType":"MemberAccess","src":"1036:8:119","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":75252,"id":75255,"nodeType":"Return","src":"1029:15:119"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:119","parameters":{"id":75249,"nodeType":"ParameterList","parameters":[],"src":"969:2:119"},"returnParameters":{"id":75252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75257,"src":"1003:14:119","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":75250,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:119","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:119"},"scope":75263,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":75262,"nodeType":"VariableDeclaration","src":"1316:25:119","nodes":[],"constant":false,"documentation":{"id":75258,"nodeType":"StructuredDocumentation","src":"1057:254:119","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"1336:5:119","scope":75263,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":75259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:119","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":75261,"length":{"hexValue":"3530","id":75260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:119","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:119","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":75226,"name":"Initializable","nameLocations":["691:13:119"],"nodeType":"IdentifierPath","referencedDeclaration":74891,"src":"691:13:119"},"id":75227,"nodeType":"InheritanceSpecifier","src":"691:13:119"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":75225,"nodeType":"StructuredDocumentation","src":"154:496:119","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[75263,74891],"name":"ContextUpgradeable","nameLocation":"669:18:119","scope":75264,"usedErrors":[]}],"license":"MIT"},"id":119}